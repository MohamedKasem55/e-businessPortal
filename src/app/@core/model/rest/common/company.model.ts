export interface CompanyDTO {
  branchId: string;
  branchName: string;
  branchNameEn: string;
  branchRbs5: string;
  branchLegacy5: string;
  branchInfo: string;
  companyName: string;
  status: string;
  register: string;
  profileNumber: string;
  registrationDate: string;
  lastBranchAdmin: string;
  lastActionTimestamp: string;
  expiryDate?: string;
  cicType: string;
  userIdOp?: string;
  lastReturnCode?: string;
  lastLogonInfo?: string;
  newMessages?: string;
  dueBills?: number;
  civilianHijraExpiryDate?: string;
  transferLimit?: number;
  companyDetailsDTO?: any;
  institution: string;
  institutionDescription: string;
  payrollCardsLayout: string;
  payrollCardsInstitutionType?: string;
  payrollRegistered: boolean;
  payrollFileSystem: boolean;
  originatorId?: any;
  companyLimits: number;
  directDebitAccount?: any;
  authenticationMethod: string;
  tokenPrice?: any;
  changeAuthMethodDate?: any;
  organizationType: string;
  etradeReferenceId: string;
  samaId: string;
  wpsPayrollRegistered: boolean;
  wpsPayrollFileSystem: boolean;
  wpsMolEstbid: string;
  blockUnblockReason?: any;
  tokenMigrated?: any;
  numTokens: number;
  numSTokenMigrations: number;
  olpRequestId?: any;
  olpRegistered?: any;
  olpAccount?: any;
  payrollLayout: string;
  companyCode: string;
  companyCodeWps: string;
  authDay: string;
  privileges: Priviledge[];
  dualAuthorization: boolean;
  idNumber?: string;
  idType?: string;
  adminResetPassNotification: boolean;
  workflowType: string;
  ownAccountWorkflow: boolean;
  ipstcstatus: string;
}

export interface Priviledge {
  privilegePk: number;
  privilegeId: string;
  description?: string;
}
